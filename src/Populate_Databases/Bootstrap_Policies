

# Bootstrap

# PacketMarking 17 rows
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","PACKET_MARKING","requires","{'table': 'mangle', 'chain': 'PREROUTING', 'create': false, 'flush': true}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","PACKET_MARKING","requires","{'table': 'mangle', 'chain': 'FORWARD',    'create': false, 'flush': true}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","PACKET_MARKING","requires","{'table': 'mangle', 'chain': 'INPUT',      'create': false, 'flush': true}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","PACKET_MARKING","requires","{'table': 'mangle', 'chain': 'OUTPUT',     'create': false, 'flush': true}");

insert into bootstrap (name,types,subtype,data) values ("IPTABLES","PACKET_MARKING","rules","{'table': 'mangle', 'chain': 'PREROUTING', 'rule': {'comment': {'comment': 'MASK_LAN_INGRESS'}, 'target': {'MARK': {'set-xmark': '0xff000002/0xff00000f'}}, 'in-interface': 'lan0'}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","PACKET_MARKING","rules","{'table': 'mangle', 'chain': 'PREROUTING', 'rule': {'comment': {'comment': 'MASK_WAN_INGRESS'}, 'target': {'MARK': {'set-xmark': '0xff000003/0xff00000f'}}, 'in-interface': 'wan0'}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","PACKET_MARKING","rules","{'table': 'mangle', 'chain': 'PREROUTING', 'rule': {'comment': {'comment': 'MASK_TUN_INGRESS'}, 'target': {'MARK': {'set-xmark': '0xff000004/0xff00000f'}}, 'in-interface': 'tun0'}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","PACKET_MARKING","rules","{'table': 'mangle', 'chain': 'FORWARD',    'rule': {'comment': {'comment': 'MARK_LAN_TO_WAN'}, 'out-interface': 'wan0', 'in-interface': 'lan0', 'target': {'MARK': {'set-xmark': '0xff222232/0xffffffff'}}}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","PACKET_MARKING","rules","{'table': 'mangle', 'chain': 'FORWARD',    'rule': {'comment': {'comment': 'MARK_LAN_TO_TUN'}, 'out-interface': 'tun0', 'in-interface': 'lan0', 'target': {'MARK': {'set-xmark': '0xff222342/0xffffffff'}}}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","PACKET_MARKING","rules","{'table': 'mangle', 'chain': 'FORWARD',    'rule': {'comment': {'comment': 'MARK_LAN_FROM_WAN'}, 'out-interface': 'lan0', 'in-interface': 'wan0', 'target': {'MARK': {'set-xmark': '0xff112223/0xffffffff'}}}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","PACKET_MARKING","rules","{'table': 'mangle', 'chain': 'FORWARD',    'rule': {'comment': {'comment': 'MARK_LAN_FROM_TUN'}, 'out-interface': 'lan0', 'in-interface': 'tun0', 'target': {'MARK': {'set-xmark': '0xff112324/0xffffffff'}}}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","PACKET_MARKING","rules","{'table': 'mangle', 'chain': 'INPUT',      'rule': {'comment': {'comment': 'MARK_LOCAL_FROM_LAN'}, 'target': {'MARK': {'set-xmark': '0xff121212/0xffffffff'}}, 'in-interface': 'lan0'}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","PACKET_MARKING","rules","{'table': 'mangle', 'chain': 'INPUT',      'rule': {'comment': {'comment': 'MARK_LOCAL_FROM_WAN'}, 'target': {'MARK': {'set-xmark': '0xff021113/0xffffffff'}}, 'in-interface': 'wan0'}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","PACKET_MARKING","rules","{'table': 'mangle', 'chain': 'INPUT',      'rule': {'comment': {'comment': 'MARK_LOCAL_FROM_TUN'}, 'target': {'MARK': {'set-xmark': '0xff021114/0xffffffff'}}, 'in-interface': 'tun0'}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","PACKET_MARKING","rules","{'table': 'mangle', 'chain': 'OUTPUT',     'rule': {'comment': {'comment': 'MARK_LOCAL_TO_LAN'}, 'out-interface': 'lan0', 'target': {'MARK': {'set-xmark': '0xff211221/0xffffffff'}}}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","PACKET_MARKING","rules","{'table': 'mangle', 'chain': 'OUTPUT',     'rule': {'comment': {'comment': 'MARK_LOCAL_TO_WAN'}, 'out-interface': 'wan0', 'target': {'MARK': {'set-xmark': '0xff011131/0xffffffff'}}}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","PACKET_MARKING","rules","{'table': 'mangle', 'chain': 'OUTPUT',     'rule': {'comment': {'comment': 'MARK_LOCAL_TO_TUN'}, 'out-interface': 'tun0', 'target': {'MARK': {'set-xmark': '0xff011141/0xffffffff'}}}}");


# mREJECT 5 rows
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","mREJECT","requires","{'table': 'filter', 'chain': 'mREJECT', 'create': true, 'flush': true}");

insert into bootstrap (name,types,subtype,data) values ("IPTABLES","mREJECT","rules","{'table': 'filter', 'chain': 'mREJECT', 'rule': {'protocol': 'icmp', 'target': {'REJECT': {'reject-with': 'icmp-admin-prohibited'}}}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","mREJECT","rules","{'table': 'filter', 'chain': 'mREJECT', 'rule': {'protocol': 'tcp', 'target': {'REJECT': {'reject-with': 'tcp-reset'}}}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","mREJECT","rules","{'table': 'filter', 'chain': 'mREJECT', 'rule': {'protocol': 'udp', 'target': {'REJECT': {'reject-with': 'icmp-port-unreachable'}}}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","mREJECT","rules","{'table': 'filter', 'chain': 'mREJECT', 'rule': {'target': {'REJECT': {'reject-with': 'icmp-proto-unreachable'}}}}");


# NAT 19 rows
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","NAT","requires","{'table': 'mangle', 'chain': 'PREROUTING',       'create': false, 'flush': false}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","NAT","requires","{'table': 'mangle', 'chain': 'CIRCULAR_POOL',    'create': true,  'flush': true}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","NAT","requires","{'table': 'mangle', 'chain': 'CIRCULAR_POOL_RL', 'create': true,  'flush': true}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","NAT","requires","{'table': 'nat',    'chain': 'PREROUTING',       'create': false, 'flush': true}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","NAT","requires","{'table': 'nat',    'chain': 'POSTROUTING',      'create': false, 'flush': true}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","NAT","requires","{'table': 'nat',    'chain': 'CIRCULAR_POOL',    'create': true,  'flush': true}");

insert into bootstrap (name,types,subtype,data) values ("IPTABLES","NAT","rules","{'table': 'mangle', 'chain': 'CIRCULAR_POOL', 'rule': {'target': 'DROP', 'protocol': 'tcp', 'tcp': {'tcp-flags': ['!', 'FIN,SYN,RST,ACK', 'SYN']}}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","NAT","rules","{'table': 'mangle', 'chain': 'CIRCULAR_POOL', 'rule': {'target': 'CIRCULAR_POOL_RL', 'comment': {'comment': 'Rate limit before sending to userspace'}}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","NAT","rules","{'table': 'mangle', 'chain': 'CIRCULAR_POOL', 'rule': {'protocol': 'tcp',  'target': {'NFQUEUE': {'queue-num': '1', 'queue-bypass': []}}}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","NAT","rules","{'table': 'mangle', 'chain': 'CIRCULAR_POOL', 'rule': {'protocol': 'udp',  'target': {'NFQUEUE': {'queue-num': '1', 'queue-bypass': []}}}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","NAT","rules","{'table': 'mangle', 'chain': 'CIRCULAR_POOL', 'rule': {'protocol': '132',  'target': {'NFQUEUE': {'queue-num': '1', 'queue-bypass': []}}}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","NAT","rules","{'table': 'mangle', 'chain': 'CIRCULAR_POOL', 'rule': {'protocol': 'icmp', 'target': {'NFQUEUE': {'queue-num': '1', 'queue-bypass': []}}}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","NAT","rules","{'table': 'mangle', 'chain': 'CIRCULAR_POOL', 'rule': {'target': {'NFQUEUE': {'queue-num': '1', 'queue-bypass': []}}}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","NAT","rules","{'table': 'mangle', 'chain': 'PREROUTING',    'rule': {'mark': {'mark': '0xff000003/0xff00000f'}, 'set': {'match-set': ['IPS_CIRCULAR_POOL', 'dst']}, 'comment': {'comment': 'New connections via CircularPool'}, 'conntrack': {'ctstate': 'NEW'}, 'target': 'CIRCULAR_POOL'}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","NAT","rules","{'table': 'nat', 'chain': 'PREROUTING',       'rule': {'mark': [{'mark': ['!', '0x0']}, {'mark': ['!', '0xff000000/0xff000000']}], 'multiport': {'dports': '80,443,8080,8443'}, 'protocol': 'tcp', 'comment': {'comment': 'Redirect to HTTP Reverse Proxy'}, 'target': {'DNAT': {'to-destination': '100.64.1.130'}}}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","NAT","rules","{'table': 'nat', 'chain': 'PREROUTING',       'rule': {'mark': [{'mark': ['!', '0x0']}, {'mark': ['!', '0xff000000/0xff000000']}], 'comment': {'comment': 'DNAT via CIRCULAR_POOL'}, 'target': 'CIRCULAR_POOL'}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","NAT","rules","{'table': 'nat', 'chain': 'CIRCULAR_POOL',    'rule': {'comment': {'comment': 'Do MARKDNAT'}, 'target': {'MARKDNAT': {'set-xmark': '0x0/0x0'}}}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","NAT","rules","{'table': 'nat', 'chain': 'POSTROUTING',      'rule': {'mark': {'mark': '0xFF011131/0xFFFFFFFF'}, 'comment': {'comment': 'SNAT to public IP address'}, 'target': {'SNAT': {'to-source': '100.64.1.130'}}}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","NAT","rules","{'table': 'nat', 'chain': 'POSTROUTING',      'rule': {'mark': {'mark': '0xFF000030/0xFF0000F0'}, 'comment': {'comment': 'SNAT to available pool'}, 'target': {'SNAT': {'to-source': '100.64.1.133-100.64.1.135'}}}}");


# ADMIN_PREEMPTIVE 28 rows
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_PREEMPTIVE","requires","{'table': 'raw',    'chain': 'PREROUTING',       'create': false, 'flush': true}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_PREEMPTIVE","requires","{'table': 'filter', 'chain': 'ADMIN_PREEMPTIVE', 'create': true,  'flush': true}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_PREEMPTIVE","requires","{'table': 'filter', 'chain': 'INPUT',            'create': false, 'flush': true}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_PREEMPTIVE","requires","{'table': 'filter', 'chain': 'OUTPUT',           'create': false, 'flush': true}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_PREEMPTIVE","requires","{'table': 'filter', 'chain': 'FORWARD',          'create': false, 'flush': true}");

insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_PREEMPTIVE","rules","{'table': 'filter', 'chain': 'INPUT',            'rule': {'target': 'ACCEPT', 'in-interface': 'lo'}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_PREEMPTIVE","rules","{'table': 'filter', 'chain': 'INPUT',            'rule': {'target': 'ACCEPT', 'in-interface': 'mgt0'}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_PREEMPTIVE","rules","{'table': 'filter', 'chain': 'INPUT',            'rule': {'mark': {'mark': '0xff000000/0xff000000'}, 'comment': {'comment': 'Continue in ADMIN_PREEMPTIVE'}, 'target': 'ADMIN_PREEMPTIVE'}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_PREEMPTIVE","rules","{'table': 'filter', 'chain': 'FORWARD',          'rule': {'mark': {'mark': '0xff000000/0xff000000'}, 'comment': {'comment': 'Continue in ADMIN_PREEMPTIVE'}, 'target': 'ADMIN_PREEMPTIVE'}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_PREEMPTIVE","rules","{'table': 'raw',    'chain': 'PREROUTING',       'rule': {'set': {'match-set': ['IPS_FILTER_BLACKLIST', 'src']}, 'comment': {'comment': 'Early drop blacklisted sources'}, 'target': 'DROP'}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_PREEMPTIVE","rules","{'table': 'raw',    'chain': 'PREROUTING',       'rule': {'set': {'match-set': ['IPS_FILTER_BLACKLIST', 'dst']}, 'comment': {'comment': 'Early drop blacklisted destinations'}, 'target': 'DROP'}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_PREEMPTIVE","rules","{'table': 'filter', 'chain': 'ADMIN_PREEMPTIVE', 'rule': {'set': {'match-set': ['IPS_FILTER_BLACKLIST', 'src']}, 'comment': {'comment': 'Drop blacklisted sources'}, 'target': 'DROP', 'comment': {'comment': 'Should not match here!'}}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_PREEMPTIVE","rules","{'table': 'filter', 'chain': 'ADMIN_PREEMPTIVE', 'rule': {'set': {'match-set': ['IPS_FILTER_BLACKLIST', 'dst']}, 'comment': {'comment': 'Drop blacklisted destinations'}, 'target': 'DROP', 'comment': {'comment': 'Should not match here!'}}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_PREEMPTIVE","rules","{'table': 'filter', 'chain': 'ADMIN_PREEMPTIVE', 'rule': {'set': {'match-set': ['IPS_FILTER_WHITELIST', 'src']}, 'comment': {'comment': 'Accept whitelisted sources'}, 'target': 'ACCEPT'}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_PREEMPTIVE","rules","{'table': 'filter', 'chain': 'ADMIN_PREEMPTIVE', 'rule': {'set': {'match-set': ['IPS_FILTER_WHITELIST', 'dst']}, 'comment': {'comment': 'Accept whitelisted destinations'}, 'target': 'ACCEPT'}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_PREEMPTIVE","rules","{'table': 'filter', 'chain': 'ADMIN_PREEMPTIVE', 'rule': {'comment': {'comment': 'Fragmented packets'}, 'fragment': true, 'target': 'DROP'}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_PREEMPTIVE","rules","{'table': 'filter', 'chain': 'ADMIN_PREEMPTIVE', 'rule': {'comment': {'comment': 'Invalid TCP SYN packet'}, 'target': 'DROP', 'protocol': 'tcp', 'conntrack': {'ctstate': 'NEW'}, 'tcp': {'tcp-flags': ['!', 'FIN,SYN,RST,ACK', 'SYN']}}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_PREEMPTIVE","rules","{'table': 'filter', 'chain': 'ADMIN_PREEMPTIVE', 'rule': {'comment': {'comment': 'Invalid TCP flags / Christmas in July'}, 'target': 'DROP', 'protocol': 'tcp', 'tcp': {'tcp-flags': ['FIN,SYN,RST,PSH,ACK,URG', 'FIN,SYN,RST,PSH,ACK,URG']}}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_PREEMPTIVE","rules","{'table': 'filter', 'chain': 'ADMIN_PREEMPTIVE', 'rule': {'comment': {'comment': 'Invalid TCP flags / Nothing to See Here'}, 'target': 'DROP', 'protocol': 'tcp', 'tcp': {'tcp-flags': ['FIN,SYN,RST,PSH,ACK,URG', 'NONE']}}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_PREEMPTIVE","rules","{'table': 'filter', 'chain': 'ADMIN_PREEMPTIVE', 'rule': {'comment': {'comment': 'Accept established traffic'}, 'conntrack': {'ctstate': 'RELATED,ESTABLISHED'}, 'target': 'ACCEPT'}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_PREEMPTIVE","rules","{'table': 'filter', 'chain': 'ADMIN_PREEMPTIVE', 'rule': {'comment': {'comment': 'Drop invalid traffic'}, 'target': 'DROP', 'conntrack': {'ctstate': 'INVALID'}}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_PREEMPTIVE","rules","{'table': 'filter', 'chain': 'ADMIN_PREEMPTIVE', 'rule': {'mark': {'mark': '0xff000002/0xff00000f'}, 'set': {'match-set': ['IPS_SPOOFED_NET_LAN', 'src']}, 'comment': {'comment': 'LAN IP Spoofing'}, 'target': 'DROP'}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_PREEMPTIVE","rules","{'table': 'filter', 'chain': 'ADMIN_PREEMPTIVE', 'rule': {'mark': {'mark': '0xff000003/0xff00000f'}, 'set': {'match-set': ['IPS_SPOOFED_NET_WAN', 'src']}, 'comment': {'comment': 'WAN IP Spoofing'}, 'target': 'DROP'}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_PREEMPTIVE","rules","{'table': 'filter', 'chain': 'ADMIN_PREEMPTIVE', 'rule': {'mark': {'mark': '0xff000004/0xff00000f'}, 'set': {'match-set': ['IPS_SPOOFED_NET_TUN', 'src']}, 'comment': {'comment': 'TUN IP Spoofing'}, 'target': 'DROP'}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_PREEMPTIVE","rules","{'table': 'filter', 'chain': 'ADMIN_PREEMPTIVE', 'rule': {'comment': {'comment': 'Reject vulnerable multiport TCP services'}, 'multiport': {'dports': '135,137,138,139'}, 'protocol': 'tcp', 'conntrack': {'ctstate': 'NEW'}, 'target': 'mREJECT'}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_PREEMPTIVE","rules","{'table': 'filter', 'chain': 'ADMIN_PREEMPTIVE', 'rule': {'mark': {'mark': '0xff000002/0xff00000f'}, 'comment': {'comment': 'New connection'}, 'hashlimit': {'hashlimit-above': '500/sec', 'hashlimit-name': 'GlobalNewConn', 'hashlimit-htable-expire': '1100', 'hashlimit-burst': '750'}, 'target': 'DROP', 'conntrack': {'ctstate': 'NEW'}}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_PREEMPTIVE","rules","{'table': 'filter', 'chain': 'ADMIN_PREEMPTIVE', 'rule': {'mark': {'mark': '0xff000003/0xff00000f'}, 'comment': {'comment': 'New connection'}, 'hashlimit': {'hashlimit-above': '500/sec', 'hashlimit-name': 'GlobalNewConn', 'hashlimit-htable-expire': '1100', 'hashlimit-burst': '750'}, 'target': 'DROP', 'conntrack': {'ctstate': 'NEW'}}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_PREEMPTIVE","rules","{'table': 'filter', 'chain': 'ADMIN_PREEMPTIVE', 'rule': {'mark': {'mark': '0xff000004/0xff00000f'}, 'comment': {'comment': 'New connection'}, 'hashlimit': {'hashlimit-above': '500/sec', 'hashlimit-name': 'GlobalNewConn', 'hashlimit-htable-expire': '1100', 'hashlimit-burst': '750'}, 'target': 'DROP', 'conntrack': {'ctstate': 'NEW'}}}");


# GROUP_POLICY 24 rows
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","GROUP_POLICY","requires","{'table': 'filter', 'chain': 'GROUP_POLICY',    'create': true, 'flush': true}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","GROUP_POLICY","requires","{'table': 'filter', 'chain': 'GROUP_POSTPAID',  'create': true, 'flush': true}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","GROUP_POLICY","requires","{'table': 'filter', 'chain': 'GROUP_PREPAID1',  'create': true, 'flush': true}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","GROUP_POLICY","requires","{'table': 'filter', 'chain': 'GROUP_PREPAID2',  'create': true, 'flush': true}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","GROUP_POLICY","requires","{'table': 'filter', 'chain': 'GROUP_PREPAID3',  'create': true, 'flush': true}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","GROUP_POLICY","requires","{'table': 'filter', 'chain': 'CUSTOMER_POLICY', 'create': true, 'flush': false}");

insert into bootstrap (name,types,subtype,data) values ("IPTABLES","GROUP_POLICY","rules","{'table': 'filter', 'chain': 'INPUT',           'rule': {'mark': {'mark': '0xff000000/0xff000000'}, 'comment':{'comment': 'Continue in GROUP_POLICY'}, 'target':'GROUP_POLICY'}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","GROUP_POLICY","rules","{'table': 'filter', 'chain': 'FORWARD',         'rule': {'mark': {'mark': '0xff000000/0xff000000'}, 'comment':{'comment': 'Continue in GROUP_POLICY'}, 'target':'GROUP_POLICY'}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","GROUP_POLICY","rules","{'table': 'filter', 'chain': 'GROUP_POLICY',    'rule': {'mark': {'mark': '0xFF000020/0xFF0000F0'}, 'set': {'match-set': ['IPS_GROUP_POSTPAID', 'dst']}, 'comment': {'comment': 'Match group by IP dst'}, 'target': 'GROUP_POSTPAID'}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","GROUP_POLICY","rules","{'table': 'filter', 'chain': 'GROUP_POLICY',    'rule': {'mark': {'mark': '0xFF000020/0xFF0000F0'}, 'set': {'match-set': ['IPS_GROUP_PREPAID1', 'dst']}, 'comment': {'comment': 'Match group by IP dst'}, 'target': 'GROUP_PREPAID1'}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","GROUP_POLICY","rules","{'table': 'filter', 'chain': 'GROUP_POLICY',    'rule': {'mark': {'mark': '0xFF000020/0xFF0000F0'}, 'set': {'match-set': ['IPS_GROUP_PREPAID2', 'dst']}, 'comment': {'comment': 'Match group by IP dst'}, 'target': 'GROUP_PREPAID2'}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","GROUP_POLICY","rules","{'table': 'filter', 'chain': 'GROUP_POLICY',    'rule': {'mark': {'mark': '0xFF000020/0xFF0000F0'}, 'set': {'match-set': ['IPS_GROUP_PREPAID3', 'dst']}, 'comment': {'comment': 'Match group by IP dst'}, 'target': 'GROUP_PREPAID3'}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","GROUP_POLICY","rules","{'table': 'filter', 'chain': 'GROUP_POLICY',    'rule': {'mark': {'mark': '0xFF000002/0xFF00000F'}, 'set': {'match-set': ['IPS_GROUP_POSTPAID', 'src']}, 'comment': {'comment': 'Match group by IP src'}, 'target': 'GROUP_POSTPAID'}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","GROUP_POLICY","rules","{'table': 'filter', 'chain': 'GROUP_POLICY',    'rule': {'mark': {'mark': '0xFF000002/0xFF00000F'}, 'set': {'match-set': ['IPS_GROUP_PREPAID1', 'src']}, 'comment': {'comment': 'Match group by IP src'}, 'target': 'GROUP_PREPAID1'}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","GROUP_POLICY","rules","{'table': 'filter', 'chain': 'GROUP_POLICY',    'rule': {'mark': {'mark': '0xFF000002/0xFF00000F'}, 'set': {'match-set': ['IPS_GROUP_PREPAID2', 'src']}, 'comment': {'comment': 'Match group by IP src'}, 'target': 'GROUP_PREPAID2'}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","GROUP_POLICY","rules","{'table': 'filter', 'chain': 'GROUP_POLICY',    'rule': {'mark': {'mark': '0xFF000002/0xFF00000F'}, 'set': {'match-set': ['IPS_GROUP_PREPAID3', 'src']}, 'comment': {'comment': 'Match group by IP src'}, 'target': 'GROUP_PREPAID3'}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","GROUP_POLICY","rules","{'table': 'filter', 'chain': 'GROUP_POSTPAID',  'rule': {'comment': {'comment': 'No traffic restrictions'}, 'target': 'CUSTOMER_POLICY'}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","GROUP_POLICY","rules","{'table': 'filter', 'chain': 'GROUP_PREPAID1',  'rule': {'mark': {'mark': '0xFF000020/0xFF0000F0'}, 'comment': {'comment': 'Restricted inbound traffic'}, 'target': 'DROP'}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","GROUP_POLICY","rules","{'table': 'filter', 'chain': 'GROUP_PREPAID1',  'rule': {'mark': {'mark': '0xFF000002/0xFF00000F'}, 'comment': {'comment': 'Allowed outbound traffic'}, 'target': 'CUSTOMER_POLICY'}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","GROUP_POLICY","rules","{'table': 'filter', 'chain': 'GROUP_PREPAID2',  'rule': {'mark': {'mark': '0xFF000020/0xFF0000F0'}, 'comment': {'comment': 'Allow subset of inbound traffic'}, 'multiport': {'dports': '80,443'}, 'protocol': 'tcp', 'target': 'CUSTOMER_POLICY'}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","GROUP_POLICY","rules","{'table': 'filter', 'chain': 'GROUP_PREPAID2',  'rule': {'mark': {'mark': '0xFF000020/0xFF0000F0'}, 'comment': {'comment': 'Allow subset of inbound traffic'}, 'protocol': '1', 'icmp':{'icmp-type':'8/0'}, 'target': 'CUSTOMER_POLICY'}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","GROUP_POLICY","rules","{'table': 'filter', 'chain': 'GROUP_PREPAID2',  'rule': {'mark': {'mark': '0xFF000020/0xFF0000F0'}, 'comment': {'comment': 'Restricted inbound traffic'}, 'target': 'DROP'}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","GROUP_POLICY","rules","{'table': 'filter', 'chain': 'GROUP_PREPAID2',  'rule': {'mark': {'mark': '0xFF000002/0xFF00000F'}, 'comment': {'comment': 'Allowed outbound traffic'}, 'target': 'CUSTOMER_POLICY'}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","GROUP_POLICY","rules","{'table': 'filter', 'chain': 'GROUP_PREPAID3',  'rule': {'comment': {'comment': 'No traffic restrictions'}, 'target': 'CUSTOMER_POLICY'}}");



# CUSTOMER_POLICY 4 rows
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","CUSTOMER_POLICY","requires","{'table': 'filter', 'chain': 'CUSTOMER_POLICY',        'create': true, 'flush': true}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","CUSTOMER_POLICY","requires","{'table': 'filter', 'chain': 'CUSTOMER_POLICY_ACCEPT', 'create': true, 'flush': true}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","CUSTOMER_POLICY","requires","{'table': 'filter', 'chain': 'ADMIN_POLICY',           'create': true, 'flush': false}");

insert into bootstrap (name,types,subtype,data) values ("IPTABLES","CUSTOMER_POLICY","rules","{'table': 'filter', 'chain': 'CUSTOMER_POLICY_ACCEPT', 'rule': {'comment': {'comment': 'Continue in ADMIN_POLICY'}, 'target': 'ADMIN_POLICY'}}");



# ADMIN_POLICY 14 rows
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_POLICY","requires","{'table': 'filter', 'chain': 'ADMIN_POLICY', 'create': true, 'flush': true}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_POLICY","requires","{'table': 'filter', 'chain': 'POLICY_DHCP',  'create': true, 'flush': false}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_POLICY","requires","{'table': 'filter', 'chain': 'POLICY_HTTP',  'create': true, 'flush': false}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_POLICY","requires","{'table': 'filter', 'chain': 'POLICY_DNS',   'create': true, 'flush': false}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_POLICY","requires","{'table': 'mangle', 'chain': 'POSTROUTING',  'create': false, 'flush': true}");

insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_POLICY","rules","{'table': 'filter', 'chain': 'INPUT',        'rule': {'mark': {'mark': '0xff000000/0xff000000'}, 'comment': {'comment': 'Continue in ADMIN_POLICY'}, 'target': 'ADMIN_POLICY'}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_POLICY","rules","{'table': 'filter', 'chain': 'FORWARD',      'rule': {'mark': {'mark': '0xff000000/0xff000000'}, 'comment': {'comment': 'Continue in ADMIN_POLICY'}, 'target': 'ADMIN_POLICY'}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_POLICY","rules","{'table': 'filter', 'chain': 'ADMIN_POLICY', 'rule': {'mark': {'mark': '0xff001010/0xff00f0f0'}, 'comment': {'comment': 'Continue in POLICY_DHCP'}, 'udp': {'dport': '67'}, 'protocol': 'udp', 'target': 'POLICY_DHCP'}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_POLICY","rules","{'table': 'filter', 'chain': 'ADMIN_POLICY', 'rule': {'mark': {'mark': '0xff001010/0xff00f0f0'}, 'comment': {'comment': 'Continue in POLICY_HTTP'}, 'multiport': {'dports': '80,443'},    'protocol': 'tcp', 'target': 'POLICY_HTTP'}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_POLICY","rules","{'table': 'filter', 'chain': 'ADMIN_POLICY', 'rule': {'mark': {'mark': '0xff001010/0xff00f0f0'}, 'comment': {'comment': 'Continue in POLICY_HTTP'}, 'multiport': {'dports': '8080,8443'}, 'protocol': 'tcp', 'target': 'POLICY_HTTP'}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_POLICY","rules","{'table': 'filter', 'chain': 'ADMIN_POLICY', 'rule': {'mark': {'mark': '0xff001010/0xff00f0f0'}, 'comment': {'comment': 'Continue in POLICY_DNS'}, 'udp': {'dport': '53'}, 'protocol': 'udp', 'target': 'POLICY_DNS'}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_POLICY","rules","{'table': 'filter', 'chain': 'ADMIN_POLICY', 'rule': {'comment': {'comment': 'Accept'}, 'target': 'ACCEPT'}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_POLICY","rules","{'table': 'mangle', 'chain': 'POSTROUTING',  'rule': {'mark': {'mark': '0xff222342/0xffffffff'}, 'comment': {'comment': 'TCP MSS clamp for tunnelled traffic'}, 'protocol': 'tcp', 'tcp': {'tcp-flags': ['SYN,RST','SYN']}, 'target': {'TCPMSS':{'clamp-mss-to-pmtu':''}}}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_POLICY","rules","{'table': 'mangle', 'chain': 'POSTROUTING',  'rule': {'mark': {'mark': '0xff222332/0xffffffff'}, 'comment': {'comment': 'TCP MSS clamp for tunnelled traffic'}, 'protocol': 'tcp', 'tcp': {'tcp-flags': ['SYN,RST','SYN']}, 'target': {'TCPMSS':{'clamp-mss-to-pmtu':''}}}}");



# ADMIN_POLICY_DHCP 3 rows
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_POLICY_DHCP","requires","{'table': 'filter', 'chain': 'POLICY_DHCP', 'create': true, 'flush': true}");

insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_POLICY_DHCP","rules","{'table': 'filter', 'chain': 'POLICY_DHCP', 'rule': {'mark': {'mark': '0xff000002/0xff00000f'}, 'comment': {'comment': 'Accept DHCP'}, 'udp': {'sport': '68', 'dport': '67'}, 'protocol': 'udp', 'target': 'ACCEPT'}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_POLICY_DHCP","rules","{'table': 'filter', 'chain': 'POLICY_DHCP', 'rule': {'target': 'DROP'}}");



# ADMIN_POLICY_HTTP 5 rows
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_POLICY_HTTP","requires","{'table': 'filter', 'chain': 'POLICY_HTTP', 'create': true, 'flush': true}");

insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_POLICY_HTTP","rules","{'table': 'filter', 'chain': 'POLICY_HTTP', 'rule': {'mark': {'mark': '0xff000003/0xff00000f'}, 'comment': {'comment': 'Accept HTTP(S) @WAN'}, 'multiport': {'dports': '80,443'},    'tcp': {'tcp-flags': ['FIN,SYN,RST,ACK', 'SYN']}, 'protocol': 'tcp', 'conntrack': {'ctstate': 'NEW'}, 'target': 'ACCEPT'}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_POLICY_HTTP","rules","{'table': 'filter', 'chain': 'POLICY_HTTP', 'rule': {'mark': {'mark': '0xff000003/0xff00000f'}, 'comment': {'comment': 'Accept HTTP(S) @WAN'}, 'multiport': {'dports': '8080,8443'}, 'tcp': {'tcp-flags': ['FIN,SYN,RST,ACK', 'SYN']}, 'protocol': 'tcp', 'conntrack': {'ctstate': 'NEW'}, 'target': 'ACCEPT'}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_POLICY_HTTP","rules","{'table': 'filter', 'chain': 'POLICY_HTTP', 'rule': {'mark': {'mark': '0xff000002/0xff00000f'}, 'comment': {'comment': 'Accept HTTP(S) @LAN'}, 'multiport': {'dports': '80,443'}, 'tcp': {'tcp-flags': ['FIN,SYN,RST,ACK', 'SYN']}, 'protocol': 'tcp', 'conntrack': {'ctstate': 'NEW'}, 'target': 'ACCEPT'}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_POLICY_HTTP","rules","{'table': 'filter', 'chain': 'POLICY_HTTP', 'rule': {                                           'comment': {'comment': 'Drop'},  'target': 'DROP'}}");



# ADMIN_POLICY_DNS 40 rows
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_POLICY_DNS","requires","{'table': 'filter', 'chain': 'POLICY_DNS',                  'create': true, 'flush': true}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_POLICY_DNS","requires","{'table': 'filter', 'chain': 'POLICY_DNS_LAN',              'create': true, 'flush': true}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_POLICY_DNS","requires","{'table': 'filter', 'chain': 'POLICY_DNS_WAN',              'create': true, 'flush': true}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_POLICY_DNS","requires","{'table': 'filter', 'chain': 'POLICY_DNS_TUN',              'create': true, 'flush': true}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_POLICY_DNS","requires","{'table': 'filter', 'chain': 'POLICY_DNS_LAN_BLACKLIST',    'create': true, 'flush': true}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_POLICY_DNS","requires","{'table': 'filter', 'chain': 'POLICY_DNS_LAN_GLOBAL_LIMIT', 'create': true, 'flush': true}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_POLICY_DNS","requires","{'table': 'filter', 'chain': 'POLICY_DNS_WAN_BLACKLIST',    'create': true, 'flush': true}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_POLICY_DNS","requires","{'table': 'filter', 'chain': 'POLICY_DNS_WAN_WHITELIST',    'create': true, 'flush': true}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_POLICY_DNS","requires","{'table': 'filter', 'chain': 'POLICY_DNS_WAN_GREYLIST',     'create': true, 'flush': true}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_POLICY_DNS","requires","{'table': 'filter', 'chain': 'POLICY_DNS_WAN_WKGREYLIST',   'create': true, 'flush': true}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_POLICY_DNS","requires","{'table': 'filter', 'chain': 'POLICY_DNS_WAN_GLOBAL_LIMIT', 'create': true, 'flush': true}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_POLICY_DNS","requires","{'table': 'filter', 'chain': 'POLICY_DNS_WAN_DOMAIN_LIMIT', 'create': true, 'flush': true}");

insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_POLICY_DNS","rules","{'table': 'filter', 'chain': 'POLICY_DNS',                  'rule': {'mark': {'mark': '0xff000002/0xff00000f'}, 'comment': {'comment': 'Continue in POLICY_DNS_LAN'}, 'udp': {'dport': '53'}, 'protocol': 'udp', 'target': 'POLICY_DNS_LAN'}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_POLICY_DNS","rules","{'table': 'filter', 'chain': 'POLICY_DNS',                  'rule': {'mark': {'mark': '0xff000003/0xff00000f'}, 'comment': {'comment': 'Continue in POLICY_DNS_WAN'}, 'udp': {'dport': '53'}, 'protocol': 'udp', 'target': 'POLICY_DNS_WAN'}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_POLICY_DNS","rules","{'table': 'filter', 'chain': 'POLICY_DNS',                  'rule': {'mark': {'mark': '0xff000004/0xff00000f'}, 'comment': {'comment': 'Continue in POLICY_DNS_TUN'}, 'udp': {'dport': '53'}, 'protocol': 'udp', 'target': 'POLICY_DNS_TUN'}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_POLICY_DNS","rules","{'table': 'filter', 'chain': 'POLICY_DNS_LAN',              'rule': {'comment': {'comment': 'Apply blacklist'}, 'target': 'POLICY_DNS_LAN_BLACKLIST'}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_POLICY_DNS","rules","{'table': 'filter', 'chain': 'POLICY_DNS_LAN',              'rule': {'comment': {'comment': 'Apply global limitation'}, 'target': 'POLICY_DNS_LAN_GLOBAL_LIMIT'}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_POLICY_DNS","rules","{'table': 'filter', 'chain': 'POLICY_DNS_LAN',              'rule': {'comment': {'comment': 'Should not be here'}, 'target': 'DROP'}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_POLICY_DNS","rules","{'table': 'filter', 'chain': 'POLICY_DNS_LAN_GLOBAL_LIMIT', 'rule': {'comment': {'comment': 'Accept DNS LAN traffic'}, 'hashlimit': {'hashlimit-upto': '200/sec', 'hashlimit-name': 'DnsLan', 'hashlimit-htable-expire': '1100', 'hashlimit-burst': '300'}, 'target': 'ACCEPT'}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_POLICY_DNS","rules","{'table': 'filter', 'chain': 'POLICY_DNS_LAN_GLOBAL_LIMIT', 'rule': {'comment': {'comment': 'DNS LAN rate exceeded'}, 'target': 'DROP'}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_POLICY_DNS","rules","{'table': 'filter', 'chain': 'POLICY_DNS_TUN',              'rule': {'comment': {'comment': 'Drop DNS @TUN'}, 'target': 'DROP'}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_POLICY_DNS","rules","{'table': 'filter', 'chain': 'POLICY_DNS_WAN',              'rule': {'comment': {'comment': 'Apply blacklist'}, 'target': 'POLICY_DNS_WAN_BLACKLIST'}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_POLICY_DNS","rules","{'table': 'filter', 'chain': 'POLICY_DNS_WAN',              'rule': {'comment': {'comment': 'Apply domain limitation'}, 'target': 'POLICY_DNS_WAN_DOMAIN_LIMIT'}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_POLICY_DNS","rules","{'table': 'filter', 'chain': 'POLICY_DNS_WAN',              'rule': {'set': {'match-set': ['IPS_DNS_WHITELIST', 'src']}, 'comment': {'comment': 'Apply whitelist'}, 'target': 'POLICY_DNS_WAN_WHITELIST'}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_POLICY_DNS","rules","{'table': 'filter', 'chain': 'POLICY_DNS_WAN',              'rule': {'set': {'match-set': ['IPS_DNS_WKGREYLIST', 'src']}, 'comment': {'comment': 'Apply wellknown greylist'}, 'target': 'POLICY_DNS_WAN_WKGREYLIST'}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_POLICY_DNS","rules","{'table': 'filter', 'chain': 'POLICY_DNS_WAN',              'rule': {'comment': {'comment': 'Apply greylist'}, 'target': 'POLICY_DNS_WAN_GREYLIST'}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_POLICY_DNS","rules","{'table': 'filter', 'chain': 'POLICY_DNS_WAN',              'rule': {'comment': {'comment': 'Should not be here'}, 'target': 'DROP'}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_POLICY_DNS","rules","{'table': 'filter', 'chain': 'POLICY_DNS_WAN_BLACKLIST',    'rule': {'set': {'match-set': ['IPS_DNS_BLACKLIST', 'src']}, 'comment': {'comment': 'Drop blacklist DNS source'}, 'target': 'DROP'}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_POLICY_DNS","rules","{'table': 'filter', 'chain': 'POLICY_DNS_WAN_BLACKLIST',    'rule': {'comment': {'comment': 'DNS unexpected response'}, 'target': 'DROP', 'conntrack': {'ctstate': 'NEW'}, 'u32': {'u32': '0x1c&0xf800=0x8000'}}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_POLICY_DNS","rules","{'table': 'filter', 'chain': 'POLICY_DNS_WAN_DOMAIN_LIMIT', 'rule': {'comment': {'comment': 'Accept SOA record'}, 'string': {'hex-string': '|07|in-addr|04|arpa|00|', 'algo': 'bm', 'to': '65535'}, 'target': 'RETURN'}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_POLICY_DNS","rules","{'table': 'filter', 'chain': 'POLICY_DNS_WAN_DOMAIN_LIMIT', 'rule': {'comment': {'comment': 'Accept SOA record'}, 'string': {'hex-string': '|03|gwa|04|demo|00|',     'algo': 'bm', 'to': '65535'}, 'target': 'RETURN'}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_POLICY_DNS","rules","{'table': 'filter', 'chain': 'POLICY_DNS_WAN_DOMAIN_LIMIT', 'rule': {'comment': {'comment': 'Drop !SOA allowed records'}, 'target': 'DROP'}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_POLICY_DNS","rules","{'table': 'filter', 'chain': 'POLICY_DNS_WAN_GLOBAL_LIMIT', 'rule': {'comment': {'comment': 'Accept Non-SLA traffic'}, 'hashlimit': {'hashlimit-upto': '200/sec', 'hashlimit-name': 'DnsWanGrey', 'hashlimit-htable-expire': '1100', 'hashlimit-burst': '300'}, 'target': 'ACCEPT'}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_POLICY_DNS","rules","{'table': 'filter', 'chain': 'POLICY_DNS_WAN_GLOBAL_LIMIT', 'rule': {'comment': {'comment': 'Drop excess'}, 'target': 'DROP'}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_POLICY_DNS","rules","{'table': 'filter', 'chain': 'POLICY_DNS_WAN_GREYLIST',     'rule': {'comment': {'comment': 'Best effort Greylist'}, 'hashlimit': {'hashlimit-upto': '25/sec', 'hashlimit-name': 'DnsWanGrey', 'hashlimit-htable-expire': '1100', 'hashlimit-burst': '50'}, 'target': 'POLICY_DNS_WAN_GLOBAL_LIMIT'}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_POLICY_DNS","rules","{'table': 'filter', 'chain': 'POLICY_DNS_WAN_GREYLIST',     'rule': {'comment': {'comment': 'Drop excess in Greylist'}, 'target': 'DROP'}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_POLICY_DNS","rules","{'table': 'filter', 'chain': 'POLICY_DNS_WAN_WHITELIST',    'rule': {'comment': {'comment': 'SLA Whitelist'}, 'hashlimit': {'hashlimit-upto': '181/sec', 'hashlimit-mode': 'srcip', 'hashlimit-name': 'DnsWanWhite', 'hashlimit-htable-expire': '1100', 'hashlimit-burst': '200'}, 'target': 'ACCEPT'}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_POLICY_DNS","rules","{'table': 'filter', 'chain': 'POLICY_DNS_WAN_WHITELIST',    'rule': {'comment': {'comment': 'Continue as WK-Greylist'}, 'target': 'POLICY_DNS_WAN_WKGREYLIST'}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_POLICY_DNS","rules","{'table': 'filter', 'chain': 'POLICY_DNS_WAN_WKGREYLIST',   'rule': {'comment': {'comment': 'Preferred WK-Greylist'}, 'hashlimit': {'hashlimit-upto': '75/sec', 'hashlimit-name': 'DnsWanWkGrey', 'hashlimit-htable-expire': '1100', 'hashlimit-burst': '100'}, 'target': 'POLICY_DNS_WAN_GLOBAL_LIMIT'}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","ADMIN_POLICY_DNS","rules","{'table': 'filter', 'chain': 'POLICY_DNS_WAN_WKGREYLIST',   'rule': {'comment': {'comment': 'Continue as Greylist'}, 'target': 'POLICY_DNS_WAN_GREYLIST'}}");



# GUEST_SERVICES 12 rows
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","GUEST_SERVICES","requires","{'table': 'nat',    'chain': 'GUEST_SERVICES', 'create': true, 'flush': true}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","GUEST_SERVICES","requires","{'table': 'filter', 'chain': 'GUEST_SERVICES', 'create': true, 'flush': true}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","GUEST_SERVICES","requires","{'table': 'filter', 'chain': 'GROUP_POLICY',   'create': false, 'flush': false}");

insert into bootstrap (name,types,subtype,data) values ("IPTABLES","GUEST_SERVICES","rules","{'table': 'nat',    'chain': 'PREROUTING',     'rule': {'mark': {'mark': '0xff000002/0xff00000f'}, 'set': {'match-set': ['!', 'IPS_SUBSCRIBERS', 'src']}, 'comment': {'comment': 'Continue to GUEST_SERVICES'}, 'target': 'GUEST_SERVICES'}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","GUEST_SERVICES","rules","{'table': 'nat',    'chain': 'GUEST_SERVICES', 'rule': {'tcp': {'dport': '80'}, 'protocol': 'tcp', 'comment': {'comment': 'Redirect to HTTP captive portal'}, 'target': {'DNAT': {'to-destination': '192.168.0.1'}}}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","GUEST_SERVICES","rules","{'table': 'nat',    'chain': 'GUEST_SERVICES', 'rule': {'udp': {'dport': '53'}, 'protocol': 'udp', 'comment': {'comment': 'Redirect to local DNS'},           'target': {'DNAT': {'to-destination': '192.168.0.1'}}}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","GUEST_SERVICES","rules","{'table': 'filter', 'chain': 'GUEST_SERVICES', 'rule': {'multiport': {'dports': '80,443'}, 'protocol': 'tcp', 'comment': {'comment': 'HTTP(S) / Continue to local services'}, 'target': 'ADMIN_POLICY'}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","GUEST_SERVICES","rules","{'table': 'filter', 'chain': 'GUEST_SERVICES', 'rule': {'udp': {'dport': '53'}, 'protocol': 'udp',            'comment': {'comment': 'DNS / Continue to local services'},     'target': 'ADMIN_POLICY'}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","GUEST_SERVICES","rules","{'table': 'filter', 'chain': 'GUEST_SERVICES', 'rule': {'udp': {'dport': '67'}, 'protocol': 'udp',            'comment': {'comment': 'DHCP / Continue to local services'},    'target': 'ADMIN_POLICY'}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","GUEST_SERVICES","rules","{'table': 'filter', 'chain': 'GUEST_SERVICES', 'rule': {'comment': {'comment': 'Drop unsupported unknown traffic'}, 'target': 'DROP'}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","GUEST_SERVICES","rules","{'table': 'filter', 'chain': 'GROUP_POLICY',   'rule': {'mark': {'mark': '0xff121212/0xffffffff'}, 'set': {'match-set': ['!', 'IPS_SUBSCRIBERS', 'src']}, 'comment': {'comment': 'Continue to GUEST_SERVICES'}, 'target': 'GUEST_SERVICES'}}");
insert into bootstrap (name,types,subtype,data) values ("IPTABLES","GUEST_SERVICES","rules","{'table': 'filter', 'chain': 'GROUP_POLICY',   'rule': {'mark': {'mark': '0xff121212/0xffffffff'}, 'set': {'match-set': ['IPS_SUBSCRIBERS', 'src']}, 'comment': {'comment': 'Drop traffic for unknown subscriber group'}, 'target': 'DROP'}}");





# Circular Pool 1 rows
insert into bootstrap (name,types,subtype,data) values ("CIRCULARPOOL",Null,Null,"{'max':1000}");




# IPSET 28 rows
insert into bootstrap (name,types,subtype,data) values ("IPSET",Null,"requires","{'name': 'IPS_CIRCULAR_POOL',    'type': 'hash:ip',  'create': true, 'flush': true}");
insert into bootstrap (name,types,subtype,data) values ("IPSET",Null,"requires","{'name': 'IPS_SPOOFED_NET_LAN',  'type': 'hash:net', 'create': true, 'flush': true}");
insert into bootstrap (name,types,subtype,data) values ("IPSET",Null,"requires","{'name': 'IPS_SPOOFED_NET_WAN',  'type': 'hash:net', 'create': true, 'flush': true}");
insert into bootstrap (name,types,subtype,data) values ("IPSET",Null,"requires","{'name': 'IPS_SPOOFED_NET_TUN',  'type': 'hash:net', 'create': true, 'flush': true}");
insert into bootstrap (name,types,subtype,data) values ("IPSET",Null,"requires","{'name': 'IPS_FILTER_BLACKLIST', 'type': 'hash:ip',  'create': true, 'flush': true}");
insert into bootstrap (name,types,subtype,data) values ("IPSET",Null,"requires","{'name': 'IPS_FILTER_WHITELIST', 'type': 'hash:ip',  'create': true, 'flush': true}");
insert into bootstrap (name,types,subtype,data) values ("IPSET",Null,"requires","{'name': 'IPS_DNS_WHITELIST',    'type': 'hash:ip',  'create': true, 'flush': true}");
insert into bootstrap (name,types,subtype,data) values ("IPSET",Null,"requires","{'name': 'IPS_DNS_BLACKLIST',    'type': 'hash:ip',  'create': true, 'flush': true}");
insert into bootstrap (name,types,subtype,data) values ("IPSET",Null,"requires","{'name': 'IPS_DNS_WKGREYLIST',   'type': 'hash:ip',  'create': true, 'flush': true}");
insert into bootstrap (name,types,subtype,data) values ("IPSET",Null,"requires","{'name': 'IPS_GROUP_POSTPAID',   'type': 'hash:ip',  'create': true, 'flush': true}");
insert into bootstrap (name,types,subtype,data) values ("IPSET",Null,"requires","{'name': 'IPS_GROUP_PREPAID1',   'type': 'hash:ip',  'create': true, 'flush': true}");
insert into bootstrap (name,types,subtype,data) values ("IPSET",Null,"requires","{'name': 'IPS_GROUP_PREPAID2',   'type': 'hash:ip',  'create': true, 'flush': true}");
insert into bootstrap (name,types,subtype,data) values ("IPSET",Null,"requires","{'name': 'IPS_GROUP_PREPAID3',   'type': 'hash:ip',  'create': true, 'flush': true}");
insert into bootstrap (name,types,subtype,data) values ("IPSET",Null,"requires","{'name': 'IPS_SUBSCRIBERS',      'type': 'hash:ip',  'create': true, 'flush': true}");

insert into bootstrap (name,types,subtype,data) values ("IPSET",Null,"rules","{'name': 'IPS_CIRCULAR_POOL',    'type': 'ip',  'items': ['100.64.1.133/32', '100.64.1.134/32', '100.64.1.135/32']}");
insert into bootstrap (name,types,subtype,data) values ("IPSET",Null,"rules","{'name': 'IPS_SPOOFED_NET_LAN',  'type': 'net', 'items': ['0.0.0.0/8', '127.0.0.0/8', '10.0.0.0/8', '172.16.0.0/12', '224.0.0.0/3']}");
insert into bootstrap (name,types,subtype,data) values ("IPSET",Null,"rules","{'name': 'IPS_SPOOFED_NET_WAN',  'type': 'net', 'items': ['0.0.0.0/8', '127.0.0.0/8', '10.0.0.0/8', '172.16.0.0/12', '192.168.0.0/16', '224.0.0.0/3']}");
insert into bootstrap (name,types,subtype,data) values ("IPSET",Null,"rules","{'name': 'IPS_SPOOFED_NET_TUN',  'type': 'net', 'items': ['0.0.0.0/8', '127.0.0.0/8', '10.0.0.0/8', '192.168.0.0/16', '224.0.0.0/3']}");
insert into bootstrap (name,types,subtype,data) values ("IPSET",Null,"rules","{'name': 'IPS_FILTER_BLACKLIST', 'type': 'ip',  'items': ['192.168.0.200']}");
insert into bootstrap (name,types,subtype,data) values ("IPSET",Null,"rules","{'name': 'IPS_FILTER_WHITELIST', 'type': 'ip',  'items': ['192.168.0.201']}");
insert into bootstrap (name,types,subtype,data) values ("IPSET",Null,"rules","{'name': 'IPS_DNS_WHITELIST',    'type': 'ip',  'items': []}");
insert into bootstrap (name,types,subtype,data) values ("IPSET",Null,"rules","{'name': 'IPS_DNS_BLACKLIST',    'type': 'ip',  'items': []}");
insert into bootstrap (name,types,subtype,data) values ("IPSET",Null,"rules","{'name': 'IPS_DNS_WKGREYLIST',   'type': 'ip',  'items': []}");
insert into bootstrap (name,types,subtype,data) values ("IPSET",Null,"rules","{'name': 'IPS_GROUP_POSTPAID',   'type': 'ip',  'items': []}");
insert into bootstrap (name,types,subtype,data) values ("IPSET",Null,"rules","{'name': 'IPS_GROUP_PREPAID1',   'type': 'ip',  'items': []}");
insert into bootstrap (name,types,subtype,data) values ("IPSET",Null,"rules","{'name': 'IPS_GROUP_PREPAID2',   'type': 'ip',  'items': []}");
insert into bootstrap (name,types,subtype,data) values ("IPSET",Null,"rules","{'name': 'IPS_GROUP_PREPAID3',   'type': 'ip',  'items': []}");
insert into bootstrap (name,types,subtype,data) values ("IPSET",Null,"rules","{'name': 'IPS_SUBSCRIBERS',      'type': 'ip',  'items': []}");


